setTimeout(async ()=>{
<!--  fetch cart items -->
<!--   // addon in this script means the added product "soft-winter-jacket" -->
         let url = '/cart.js';
        let res = await fetch(url);
        let cartData = await res.json();
        let cartItems = await cartData.items;
<!--   check if addon item has already been added to cart -->
         let addOnExist = cartItems.filter(el =>{
          return el.handle === 'dark-winter-jacket';
        });
<!-- check if handbag, black and medium also exist in cart -->
        let index = cartItems.findIndex(el =>{
          return el.product_title === 'Handbag'
          && el.variant_options.includes('Black') 
          && el.variant_options.includes('Medium')
        });
<!--  get the index / position of the delete button tied to the handbag-->
        let btnId= "Remove-"+(index+1);
        console.log(document.getElementById(btnId));
        if(document.getElementById(btnId)){
<!--  listen to click event from the delete button -->
          document.getElementById(btnId).addEventListener("click", async function(event) {
            setTimeout(async ()=>{
            <!-- refetch cart items -->
            let res_ = await fetch(url);
            let cartData_ = await res_.json();
            let cartItems_ = await cartData_.items;
            <!--   check if addon item has already been added to cart -->
             let addOnExist_ = await cartItems_.filter(el =>{
              return el.handle === 'dark-winter-jacket';
            });
              <!--  if handbag is deleted  -->
              if(await addOnExist_.length > 0){
                console.log('execue delete');
                 await fetch('/cart/change.js', {
                  method: "POST",
                  body: JSON.stringify({
                    id: await addOnExist[0].key,
                    quantity: 0
                  }),
                  headers: {
                    "Content-type": "application/json; charset=UTF-8"
                  }
                });
                await location.reload();
              }
            }, 500);
        });
      };
    }, 1000);
